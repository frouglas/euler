'''
Created on Aug 20, 2012

Pentagonal numbers are generated by the formula, Pn=n(3n1)/2. The first 
ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 
70  22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and 
difference is pentagonal and D = |Pk  Pj| is minimised; what is the value of D?

@author: frouglas
'''

import math

def pent(x):
    pentNum = x*(3*x-1)/2
    return pentNum

def isPent(x):
    root = (1+math.sqrt(1+24*x))/6
    if root == int(root):
        return 1
    else: 
        return 0

minDiff = -1
minI = 0
minK = 0

i = 2
k = i-1
pentK = int(pent(k))
pentI = int(pent(i))
pentI1 = int(pent(i+1))
iDiff = pentI1 - pentI
diffP = int(pentI - pentK)

while (iDiff<=minDiff) | (minDiff==-1):
    if int(i/1000) == i/1000:
        print("checking i = " + str(i))
    while ((pentK>=pentI1-pentI) & (minDiff==-1)) | ((minDiff!=-1) & (diffP < minDiff)):
        #if int(k/50) == k/50:
        #    print("    checking k = " + str(k))
        sumP = int(pentI + pentK)
        #print("i = " + str(i) + ", pent i = " + str(pentI) + " (" + str(isPent(pentI)) + "), k = " + str(k) + ", pent k = " + str(pentK) + " (" + str(isPent(pentK)) + "), sum = " + str(sumP) + " (" + str(isPent(sumP)) + "), diff = " + str(diffP) + " (" + str(isPent(diffP)) + ")") 
        if (isPent(sumP)==1) & (isPent(diffP)==1):
            print("for i = " + str(i) + " and k = " +str(k) + ", sum is a pent number, " + str(sumP) + " and diff is a pent number, " + str(diffP))
            if (diffP < minDiff) | (minDiff==-1):
                minDiff = diffP
                minI = i
                minK = k
                print("the trap numbers with the min diff are " + str(pentI) + " and " + str(pentK) + ", difference = " + str(diffP))  
        #elif isPent(sumP):
            #print("isPent(sumP) = " + str(isPent(sumP)) + ", isPent(diffP) = " + str(isPent(diffP)))
            #print("for i = " + str(i) + " and k = " +str(k) + ", sum is a pent number, " + str(sumP))
        #    holla = 1
        #elif isPent(diffP):
            #print("for i = " + str(i) + " and k = " +str(k) + ", diff is a pent number, " + str(diffP))            
        #    holla = 1
        k -= 1
        pentK = pent(k)
        diffP = int(pentI - pentK)
    i += 1
    pentI = pent(i)
    pentI1 = pent(i+1)
    iDiff = pentI1 - pentI
    k = i-1
    pentK = int(pent(k))
    diffP = int(pentI - pentK)
print("the trap numbers with the min diff are " + str(minI) + " and " + str(minK) + ", difference = " + str(minDiff))